{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\ranking\\\\App.js\";\nimport React, { useState } from \"react\";\nimport { AppLoading } from \"expo\";\nimport * as Font from \"expo-font\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { Asset } from 'expo-asset';\nimport { Ionicons } from \"@expo/vector-icons\";\nimport Stack from \"./navigation/Stack\";\n\nvar cacheImages = function cacheImages(images) {\n  return images.map(function (image) {\n    if (typeof image === \"string\") {\n      return Image.prefetch(image);\n    } else {\n      return Asset.fromModule(image).downloadAsync();\n    }\n  });\n};\n\nvar cacheFonts = function cacheFonts(fonts) {\n  return fonts.map(function (font) {\n    return [Font.loadAsync(font), Font.loadAsync(font)];\n  });\n};\n\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isReady = _useState2[0],\n      setIsReady = _useState2[1];\n\n  var loadAssets = function loadAssets() {\n    var images = cacheImages([\"https://images.unsplash.com/photo-1562887189-e5d078343de4?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\", require(\"./assets/splash.png\")]);\n    var fonts = cacheFonts([Ionicons.font]);\n    return Promise.all([].concat(_toConsumableArray(images), _toConsumableArray(fonts)));\n  };\n\n  var onFinish = function onFinish() {\n    return setIsReady(true);\n  };\n\n  return isReady ? React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }\n  }, React.createElement(Stack, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 6\n    }\n  })) : React.createElement(AppLoading, {\n    startAsync: loadAssets,\n    onFinish: onFinish,\n    onError: console.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["C:/ranking/App.js"],"names":["React","useState","AppLoading","Font","NavigationContainer","Asset","Ionicons","Stack","cacheImages","images","map","image","Image","prefetch","fromModule","downloadAsync","cacheFonts","fonts","font","loadAsync","App","isReady","setIsReady","loadAssets","require","Promise","all","onFinish","console","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,KAAP;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,MAAM;AAAA,SACxBA,MAAM,CAACC,GAAP,CAAW,UAAAC,KAAK,EAAI;AAClB,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,aAAOC,KAAK,CAACC,QAAN,CAAeF,KAAf,CAAP;AACD,KAFD,MAEO;AACL,aAAON,KAAK,CAACS,UAAN,CAAiBH,KAAjB,EAAwBI,aAAxB,EAAP;AACD;AACF,GAND,CADwB;AAAA,CAA1B;;AASA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK;AAAA,SAAIA,KAAK,CAACP,GAAN,CAAU,UAAAQ,IAAI;AAAA,WAAI,CAACf,IAAI,CAACgB,SAAL,CAAeD,IAAf,CAAD,EAAuBf,IAAI,CAACgB,SAAL,CAAeD,IAAf,CAAvB,CAAJ;AAAA,GAAd,CAAJ;AAAA,CAAxB;;AAEA,eAAe,SAASE,GAAT,GAAe;AAAA,kBACEnB,QAAQ,CAAC,KAAD,CADV;AAAA;AAAA,MACrBoB,OADqB;AAAA,MACZC,UADY;;AAG5B,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAMd,MAAM,GAAGD,WAAW,CAAC,CACzB,oIADyB,EAEzBgB,OAAO,uBAFkB,CAAD,CAA1B;AAIA,QAAMP,KAAK,GAAGD,UAAU,CAAC,CAACV,QAAQ,CAACY,IAAV,CAAD,CAAxB;AACA,WAAOO,OAAO,CAACC,GAAR,8BAAgBjB,MAAhB,sBAA2BQ,KAA3B,GAAP;AACD,GAPD;;AAQA,MAAMU,QAAQ,GAAG,SAAXA,QAAW;AAAA,WAAML,UAAU,CAAC,IAAD,CAAhB;AAAA,GAAjB;;AAEA,SAAOD,OAAO,GACb,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADa,GAKZ,oBAAC,UAAD;AACE,IAAA,UAAU,EAAEE,UADd;AAEE,IAAA,QAAQ,EAAEI,QAFZ;AAGE,IAAA,OAAO,EAAEC,OAAO,CAACC,KAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF;AAWD","sourcesContent":["import React, { useState } from \"react\";\nimport { AppLoading } from \"expo\";\nimport * as Font from \"expo-font\";\nimport { Image } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { Asset } from 'expo-asset' ;\nimport { Ionicons } from \"@expo/vector-icons\";\nimport Stack from \"./navigation/Stack\";\n\nconst cacheImages = images =>\n  images.map(image => {\n    if (typeof image === \"string\") {\n      return Image.prefetch(image);\n    } else {\n      return Asset.fromModule(image).downloadAsync();\n    }\n  });\n\nconst cacheFonts = fonts => fonts.map(font => [Font.loadAsync(font), Font.loadAsync(font)]);\n\nexport default function App() {\n  const [isReady, setIsReady] = useState(false);\n\n  const loadAssets = () => {     \n    const images = cacheImages([\n      \"https://images.unsplash.com/photo-1562887189-e5d078343de4?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\n      require(\"./assets/splash.png\")\n    ]);\n    const fonts = cacheFonts([Ionicons.font]);\n    return Promise.all([...images, ...fonts]);\n  };\n  const onFinish = () => setIsReady(true);\n  \n  return isReady ? (\n   <NavigationContainer>\n     <Stack/>\n   </NavigationContainer>\n  ) : (\n    <AppLoading \n      startAsync={loadAssets} \n      onFinish={onFinish} \n      onError={console.error}\n    />    \n  );\n}"]},"metadata":{},"sourceType":"module"}